@model Testlogin.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>RegisterViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", @id = "user", onkeyup = "UserCheck()" } })
            @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger", @id = "messid" })
            @*<p id="Checkmess" />*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PW, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PW, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PW, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPW, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmPW, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPW, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @id = "email", onkeyup = "UserCheck()" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger", @id = "messemail" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    function UserCheck() {
        var checkId = $("#user").val();
        var checkemil = $("#email").val();
        $.ajax({
            type: "POST",
            url: "/Home/Check",
            data: '{checkid:"' + checkId + '",checkemail:"' + checkemil +'"}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                var messid = $("#messid");
                var messemail = $("#messemail");
                if (checkId.length >= 8)
                {
                    if (result.Rid != 1)
                    {
                        messid.html("ID Avaialable");
                        messid.css("color", "green");
                    }
                    else
                    {
                        messid.html("ID Not Avaialable");
                        messid.css("color", "red");
                    }
                }
                if (result.Remail != 1) {
                    messemail.html("Email Avaialable");
                    messemail.css("color", "green");
                }
                else {
                    messemail.html("Email Not Avaialable");
                    messemail.css("color", "red");
                }
            }

        });
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryunobtrusive")
}
